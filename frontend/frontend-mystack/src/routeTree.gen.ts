/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkspaceRouteImport } from './routes/workspace/route'
import { Route as IndexImport } from './routes/index'
import { Route as WorkspaceSelectImport } from './routes/workspace/select'
import { Route as WorkspaceCreateImport } from './routes/workspace/create'
import { Route as WorkspaceWorkspaceIdChatRouteImport } from './routes/workspace/$workspaceId.chat/route'
import { Route as WorkspaceWorkspaceIdChatIndexImport } from './routes/workspace/$workspaceId.chat/index'
import { Route as WorkspaceWorkspaceIdChatRoomIdImport } from './routes/workspace/$workspaceId.chat/$roomId'

// Create/Update Routes

const WorkspaceRouteRoute = WorkspaceRouteImport.update({
  id: '/workspace',
  path: '/workspace',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkspaceSelectRoute = WorkspaceSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => WorkspaceRouteRoute,
} as any)

const WorkspaceCreateRoute = WorkspaceCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => WorkspaceRouteRoute,
} as any)

const WorkspaceWorkspaceIdChatRouteRoute =
  WorkspaceWorkspaceIdChatRouteImport.update({
    id: '/$workspaceId/chat',
    path: '/$workspaceId/chat',
    getParentRoute: () => WorkspaceRouteRoute,
  } as any)

const WorkspaceWorkspaceIdChatIndexRoute =
  WorkspaceWorkspaceIdChatIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkspaceWorkspaceIdChatRouteRoute,
  } as any)

const WorkspaceWorkspaceIdChatRoomIdRoute =
  WorkspaceWorkspaceIdChatRoomIdImport.update({
    id: '/$roomId',
    path: '/$roomId',
    getParentRoute: () => WorkspaceWorkspaceIdChatRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/workspace': {
      id: '/workspace'
      path: '/workspace'
      fullPath: '/workspace'
      preLoaderRoute: typeof WorkspaceRouteImport
      parentRoute: typeof rootRoute
    }
    '/workspace/create': {
      id: '/workspace/create'
      path: '/create'
      fullPath: '/workspace/create'
      preLoaderRoute: typeof WorkspaceCreateImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/workspace/select': {
      id: '/workspace/select'
      path: '/select'
      fullPath: '/workspace/select'
      preLoaderRoute: typeof WorkspaceSelectImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/workspace/$workspaceId/chat': {
      id: '/workspace/$workspaceId/chat'
      path: '/$workspaceId/chat'
      fullPath: '/workspace/$workspaceId/chat'
      preLoaderRoute: typeof WorkspaceWorkspaceIdChatRouteImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/workspace/$workspaceId/chat/$roomId': {
      id: '/workspace/$workspaceId/chat/$roomId'
      path: '/$roomId'
      fullPath: '/workspace/$workspaceId/chat/$roomId'
      preLoaderRoute: typeof WorkspaceWorkspaceIdChatRoomIdImport
      parentRoute: typeof WorkspaceWorkspaceIdChatRouteImport
    }
    '/workspace/$workspaceId/chat/': {
      id: '/workspace/$workspaceId/chat/'
      path: '/'
      fullPath: '/workspace/$workspaceId/chat/'
      preLoaderRoute: typeof WorkspaceWorkspaceIdChatIndexImport
      parentRoute: typeof WorkspaceWorkspaceIdChatRouteImport
    }
  }
}

// Create and export the route tree

interface WorkspaceWorkspaceIdChatRouteRouteChildren {
  WorkspaceWorkspaceIdChatRoomIdRoute: typeof WorkspaceWorkspaceIdChatRoomIdRoute
  WorkspaceWorkspaceIdChatIndexRoute: typeof WorkspaceWorkspaceIdChatIndexRoute
}

const WorkspaceWorkspaceIdChatRouteRouteChildren: WorkspaceWorkspaceIdChatRouteRouteChildren =
  {
    WorkspaceWorkspaceIdChatRoomIdRoute: WorkspaceWorkspaceIdChatRoomIdRoute,
    WorkspaceWorkspaceIdChatIndexRoute: WorkspaceWorkspaceIdChatIndexRoute,
  }

const WorkspaceWorkspaceIdChatRouteRouteWithChildren =
  WorkspaceWorkspaceIdChatRouteRoute._addFileChildren(
    WorkspaceWorkspaceIdChatRouteRouteChildren,
  )

interface WorkspaceRouteRouteChildren {
  WorkspaceCreateRoute: typeof WorkspaceCreateRoute
  WorkspaceSelectRoute: typeof WorkspaceSelectRoute
  WorkspaceWorkspaceIdChatRouteRoute: typeof WorkspaceWorkspaceIdChatRouteRouteWithChildren
}

const WorkspaceRouteRouteChildren: WorkspaceRouteRouteChildren = {
  WorkspaceCreateRoute: WorkspaceCreateRoute,
  WorkspaceSelectRoute: WorkspaceSelectRoute,
  WorkspaceWorkspaceIdChatRouteRoute:
    WorkspaceWorkspaceIdChatRouteRouteWithChildren,
}

const WorkspaceRouteRouteWithChildren = WorkspaceRouteRoute._addFileChildren(
  WorkspaceRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/workspace': typeof WorkspaceRouteRouteWithChildren
  '/workspace/create': typeof WorkspaceCreateRoute
  '/workspace/select': typeof WorkspaceSelectRoute
  '/workspace/$workspaceId/chat': typeof WorkspaceWorkspaceIdChatRouteRouteWithChildren
  '/workspace/$workspaceId/chat/$roomId': typeof WorkspaceWorkspaceIdChatRoomIdRoute
  '/workspace/$workspaceId/chat/': typeof WorkspaceWorkspaceIdChatIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/workspace': typeof WorkspaceRouteRouteWithChildren
  '/workspace/create': typeof WorkspaceCreateRoute
  '/workspace/select': typeof WorkspaceSelectRoute
  '/workspace/$workspaceId/chat/$roomId': typeof WorkspaceWorkspaceIdChatRoomIdRoute
  '/workspace/$workspaceId/chat': typeof WorkspaceWorkspaceIdChatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/workspace': typeof WorkspaceRouteRouteWithChildren
  '/workspace/create': typeof WorkspaceCreateRoute
  '/workspace/select': typeof WorkspaceSelectRoute
  '/workspace/$workspaceId/chat': typeof WorkspaceWorkspaceIdChatRouteRouteWithChildren
  '/workspace/$workspaceId/chat/$roomId': typeof WorkspaceWorkspaceIdChatRoomIdRoute
  '/workspace/$workspaceId/chat/': typeof WorkspaceWorkspaceIdChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/workspace'
    | '/workspace/create'
    | '/workspace/select'
    | '/workspace/$workspaceId/chat'
    | '/workspace/$workspaceId/chat/$roomId'
    | '/workspace/$workspaceId/chat/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/workspace'
    | '/workspace/create'
    | '/workspace/select'
    | '/workspace/$workspaceId/chat/$roomId'
    | '/workspace/$workspaceId/chat'
  id:
    | '__root__'
    | '/'
    | '/workspace'
    | '/workspace/create'
    | '/workspace/select'
    | '/workspace/$workspaceId/chat'
    | '/workspace/$workspaceId/chat/$roomId'
    | '/workspace/$workspaceId/chat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WorkspaceRouteRoute: typeof WorkspaceRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WorkspaceRouteRoute: WorkspaceRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/workspace"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/workspace": {
      "filePath": "workspace/route.tsx",
      "children": [
        "/workspace/create",
        "/workspace/select",
        "/workspace/$workspaceId/chat"
      ]
    },
    "/workspace/create": {
      "filePath": "workspace/create.tsx",
      "parent": "/workspace"
    },
    "/workspace/select": {
      "filePath": "workspace/select.tsx",
      "parent": "/workspace"
    },
    "/workspace/$workspaceId/chat": {
      "filePath": "workspace/$workspaceId.chat/route.tsx",
      "parent": "/workspace",
      "children": [
        "/workspace/$workspaceId/chat/$roomId",
        "/workspace/$workspaceId/chat/"
      ]
    },
    "/workspace/$workspaceId/chat/$roomId": {
      "filePath": "workspace/$workspaceId.chat/$roomId.tsx",
      "parent": "/workspace/$workspaceId/chat"
    },
    "/workspace/$workspaceId/chat/": {
      "filePath": "workspace/$workspaceId.chat/index.tsx",
      "parent": "/workspace/$workspaceId/chat"
    }
  }
}
ROUTE_MANIFEST_END */
